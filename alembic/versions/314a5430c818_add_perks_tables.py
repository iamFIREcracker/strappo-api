"""add perks tables

Revision ID: 314a5430c818
Revises: 4ddf082083cd
Create Date: 2014-10-05 11:51:25.087440

"""

# revision identifiers, used by Alembic.
revision = '314a5430c818'
down_revision = '4ddf082083cd'

from alembic import op
import sqlalchemy as sa

from app.models import User
from app.repositories.perks import PerksRepository
from app.weblib.db import expunged
from app.weblib.db import create_session


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('driver_perk',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('eligible_for', sa.Integer(), nullable=False),
    sa.Column('active_for', sa.Integer(), nullable=False),
    sa.Column('fixed_rate', sa.Float(), nullable=False),
    sa.Column('multiplier', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eligible_driver_perk',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('perk_id', sa.String(), nullable=True),
    sa.Column('valid_until', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['perk_id'], ['driver_perk.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('active_driver_perk',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('perk_id', sa.String(), nullable=True),
    sa.Column('valid_until', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['perk_id'], ['driver_perk.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('passenger_perk',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('eligible_for', sa.Integer(), nullable=False),
    sa.Column('active_for', sa.Integer(), nullable=False),
    sa.Column('fixed_rate', sa.Float(), nullable=False),
    sa.Column('multiplier', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('eligible_passenger_perk',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('perk_id', sa.String(), nullable=True),
    sa.Column('valid_until', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['perk_id'], ['passenger_perk.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('active_passenger_perk',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('perk_id', sa.String(), nullable=True),
    sa.Column('valid_until', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['perk_id'], ['passenger_perk.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    ### end Alembic commands ###
    orm = create_session()
    driver_standard = PerksRepository.\
        add_driver_perk(name=PerksRepository.STANDARD_DRIVER_NAME,
                        eligible_for=3650,
                        active_for=3650,
                        fixed_rate=0.0,
                        multiplier=1.0)
    orm.add(driver_standard)
    passenger_standard = PerksRepository.\
        add_passenger_perk(name=PerksRepository.STANDARD_PASSENGER_NAME,
                           eligible_for=3650,
                           active_for=3650,
                           fixed_rate=1.0,
                           multiplier=1.0)
    orm.add(passenger_standard)
    driver_early_bird = PerksRepository.\
        add_driver_perk(name=PerksRepository.EARLY_BIRD_DRIVER_NAME,
                        eligible_for=7,
                        active_for=60,
                        fixed_rate=0.0,
                        multiplier=2.0)
    orm.add(driver_early_bird)
    passenger_early_bird = PerksRepository.\
        add_passenger_perk(name=PerksRepository.EARLY_BIRD_PASSENGER_NAME,
                           eligible_for=0,
                           active_for=60,
                           fixed_rate=0.0,
                           multiplier=0.0)
    orm.add(passenger_early_bird)
    for u in User.query:
        u = expunged(u, User.session)
        orm.add(PerksRepository.eligiblify_driver_perk(u, driver_early_bird))
        orm.add(PerksRepository.activate_driver_perk(u, driver_standard))
        orm.add(PerksRepository.activate_passenger_perk(u, passenger_standard))
        orm.add(PerksRepository.activate_passenger_perk(u,
                                                        passenger_early_bird))
        orm.add(u)
    orm.commit()


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('active_passenger_perk')
    op.drop_table('eligible_passenger_perk')
    op.drop_table('passenger_perk')
    op.drop_table('active_driver_perk')
    op.drop_table('eligible_driver_perk')
    op.drop_table('driver_perk')
    ### end Alembic commands ###
